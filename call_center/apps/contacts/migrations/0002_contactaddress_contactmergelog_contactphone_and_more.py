# Generated by Django 5.2.1 on 2025-06-05 13:47

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contacts', '0001_initial'),
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('address_type', models.CharField(choices=[('home', 'Home'), ('work', 'Work'), ('mailing', 'Mailing'), ('emergency', 'Emergency'), ('other', 'Other')], default='home', max_length=20, verbose_name='Address Type')),
                ('address_line_1', models.CharField(max_length=255, verbose_name='Address Line 1')),
                ('address_line_2', models.CharField(blank=True, max_length=255, verbose_name='Address Line 2')),
                ('landmark', models.CharField(blank=True, max_length=255, verbose_name='Landmark')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Is Primary Address')),
            ],
            options={
                'verbose_name': 'Contact Address',
                'verbose_name_plural': 'Contact Addresses',
                'ordering': ['-is_primary', 'address_type'],
            },
        ),
        migrations.CreateModel(
            name='ContactMergeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('merged_contact_id', models.UUIDField(help_text='UUID of contact that was merged and deleted', verbose_name='Merged Contact ID')),
                ('merged_contact_name', models.CharField(help_text='Name of contact that was merged', max_length=255, verbose_name='Merged Contact Name')),
                ('merge_reason', models.TextField(help_text='Reason for merging the contacts', verbose_name='Merge Reason')),
                ('merged_data', models.JSONField(help_text='Data from the merged contact for audit purposes', verbose_name='Merged Data')),
            ],
            options={
                'verbose_name': 'Contact Merge Log',
                'verbose_name_plural': 'Contact Merge Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContactPhone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('phone_type', models.CharField(choices=[('mobile', 'Mobile'), ('home', 'Home'), ('work', 'Work'), ('emergency', 'Emergency'), ('other', 'Other')], default='mobile', max_length=20, verbose_name='Phone Type')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Phone Number')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Is Primary Phone')),
                ('is_verified', models.BooleanField(default=False, help_text='Whether this phone number has been verified', verbose_name='Is Verified')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this phone number', verbose_name='Notes')),
            ],
            options={
                'verbose_name': 'Contact Phone',
                'verbose_name_plural': 'Contact Phones',
                'ordering': ['-is_primary', 'phone_type'],
            },
        ),
        migrations.CreateModel(
            name='ContactRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('relationship_type', models.CharField(choices=[('family', 'Family'), ('spouse', 'Spouse/Partner'), ('parent', 'Parent'), ('child', 'Child'), ('sibling', 'Sibling'), ('guardian', 'Guardian'), ('friend', 'Friend'), ('colleague', 'Colleague'), ('neighbor', 'Neighbor'), ('professional', 'Professional'), ('other', 'Other')], max_length=20, verbose_name='Relationship Type')),
                ('description', models.TextField(blank=True, help_text='Additional description of the relationship', verbose_name='Description')),
                ('is_verified', models.BooleanField(default=False, help_text='Whether this relationship has been verified', verbose_name='Is Verified')),
            ],
            options={
                'verbose_name': 'Contact Relationship',
                'verbose_name_plural': 'Contact Relationships',
            },
        ),
        migrations.CreateModel(
            name='ContactRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('role', models.CharField(choices=[('reporter', 'Reporter'), ('client', 'Client/Victim'), ('perpetrator', 'Perpetrator'), ('witness', 'Witness'), ('guardian', 'Guardian'), ('relative', 'Relative'), ('other', 'Other')], max_length=20, verbose_name='Role')),
                ('is_primary', models.BooleanField(default=False, help_text='Whether this is the primary contact for this role in the case', verbose_name='Is Primary')),
                ('role_data', models.JSONField(blank=True, default=dict, help_text='Additional role-specific information', verbose_name='Role Data')),
                ('legacy_role_id', models.IntegerField(blank=True, help_text='ID from original role-specific table', null=True, verbose_name='Legacy Role ID')),
            ],
            options={
                'verbose_name': 'Contact Role',
                'verbose_name_plural': 'Contact Roles',
            },
        ),
        migrations.AlterModelOptions(
            name='contact',
            options={'ordering': ['full_name'], 'verbose_name': 'Contact', 'verbose_name_plural': 'Contacts'},
        ),
        migrations.RemoveField(
            model_name='contact',
            name='phone',
        ),
        migrations.AddField(
            model_name='contact',
            name='additional_info',
            field=models.JSONField(blank=True, default=dict, help_text='Additional contact details stored as JSON', verbose_name='Additional Information'),
        ),
        migrations.AddField(
            model_name='contact',
            name='age',
            field=models.PositiveSmallIntegerField(blank=True, help_text='Age in years', null=True, verbose_name='Age'),
        ),
        migrations.AddField(
            model_name='contact',
            name='age_group',
            field=models.ForeignKey(blank=True, limit_choices_to={'category': 'age_group'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts_by_age_group', to='core.referencedata', verbose_name='Age Group'),
        ),
        migrations.AddField(
            model_name='contact',
            name='contact_type',
            field=models.CharField(choices=[('person', 'Person'), ('organization', 'Organization'), ('anonymous', 'Anonymous')], default='person', max_length=20, verbose_name='Contact Type'),
        ),
        migrations.AddField(
            model_name='contact',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.country', verbose_name='Country'),
        ),
        migrations.AddField(
            model_name='contact',
            name='county',
            field=models.ForeignKey(blank=True, limit_choices_to={'location_type': 'county'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts_by_county', to='core.location', verbose_name='County'),
        ),
        migrations.AddField(
            model_name='contact',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True, verbose_name='Date of Birth'),
        ),
        migrations.AddField(
            model_name='contact',
            name='district',
            field=models.ForeignKey(blank=True, limit_choices_to={'location_type': 'district'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts_by_district', to='core.location', verbose_name='District'),
        ),
        migrations.AddField(
            model_name='contact',
            name='full_name',
            field=models.CharField(blank=True, db_index=True, default='', help_text='Complete name of the contact', max_length=255, verbose_name='Full Name'),
        ),
        migrations.AddField(
            model_name='contact',
            name='gender',
            field=models.ForeignKey(blank=True, limit_choices_to={'category': 'gender'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts_by_gender', to='core.referencedata', verbose_name='Gender'),
        ),
        migrations.AddField(
            model_name='contact',
            name='landmark',
            field=models.CharField(blank=True, help_text='Nearby landmark for location', max_length=255, verbose_name='Landmark'),
        ),
        migrations.AddField(
            model_name='contact',
            name='language',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.language', verbose_name='Primary Language'),
        ),
        migrations.AddField(
            model_name='contact',
            name='legacy_client_id',
            field=models.IntegerField(blank=True, db_index=True, help_text='Original client table ID', null=True, verbose_name='Legacy Client ID'),
        ),
        migrations.AddField(
            model_name='contact',
            name='legacy_contact_id',
            field=models.IntegerField(blank=True, db_index=True, help_text='Original contact table ID', null=True, verbose_name='Legacy Contact ID'),
        ),
        migrations.AddField(
            model_name='contact',
            name='legacy_perpetrator_id',
            field=models.IntegerField(blank=True, db_index=True, help_text='Original perpetrator table ID', null=True, verbose_name='Legacy Perpetrator ID'),
        ),
        migrations.AddField(
            model_name='contact',
            name='legacy_reporter_id',
            field=models.IntegerField(blank=True, db_index=True, help_text='Original reporter table ID', null=True, verbose_name='Legacy Reporter ID'),
        ),
        migrations.AddField(
            model_name='contact',
            name='migration_notes',
            field=models.TextField(blank=True, help_text='Notes about migration process or deduplication', verbose_name='Migration Notes'),
        ),
        migrations.AddField(
            model_name='contact',
            name='migration_source',
            field=models.CharField(blank=True, help_text='Which legacy table this record came from', max_length=50, verbose_name='Migration Source'),
        ),
        migrations.AddField(
            model_name='contact',
            name='national_id',
            field=models.CharField(blank=True, max_length=100, verbose_name='National ID Number'),
        ),
        migrations.AddField(
            model_name='contact',
            name='national_id_type',
            field=models.CharField(blank=True, choices=[('national_id', 'National ID'), ('passport', 'Passport'), ('drivers_license', "Driver's License"), ('birth_certificate', 'Birth Certificate'), ('refugee_id', 'Refugee ID'), ('other', 'Other')], max_length=20, verbose_name='ID Type'),
        ),
        migrations.AddField(
            model_name='contact',
            name='nationality',
            field=models.ForeignKey(blank=True, limit_choices_to={'category': 'nationality'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts_by_nationality', to='core.referencedata', verbose_name='Nationality'),
        ),
        migrations.AddField(
            model_name='contact',
            name='parish',
            field=models.ForeignKey(blank=True, limit_choices_to={'location_type': 'parish'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts_by_parish', to='core.location', verbose_name='Parish'),
        ),
        migrations.AddField(
            model_name='contact',
            name='physical_address',
            field=models.TextField(blank=True, help_text='Detailed address information', verbose_name='Physical Address'),
        ),
        migrations.AddField(
            model_name='contact',
            name='primary_phone',
            field=models.CharField(blank=True, db_index=True, help_text='Main phone number', max_length=20, verbose_name='Primary Phone'),
        ),
        migrations.AddField(
            model_name='contact',
            name='region',
            field=models.ForeignKey(blank=True, limit_choices_to={'location_type': 'region'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts_by_region', to='core.location', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='contact',
            name='residence',
            field=models.CharField(blank=True, help_text='Current place of residence', max_length=255, verbose_name='Residence'),
        ),
        migrations.AddField(
            model_name='contact',
            name='secondary_phone',
            field=models.CharField(blank=True, help_text='Alternative phone number', max_length=20, verbose_name='Secondary Phone'),
        ),
        migrations.AddField(
            model_name='contact',
            name='subcounty',
            field=models.ForeignKey(blank=True, limit_choices_to={'location_type': 'subcounty'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts_by_subcounty', to='core.location', verbose_name='Subcounty'),
        ),
        migrations.AddField(
            model_name='contact',
            name='tribe',
            field=models.ForeignKey(blank=True, limit_choices_to={'category': 'tribe'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts_by_tribe', to='core.referencedata', verbose_name='Tribe'),
        ),
        migrations.AddField(
            model_name='contact',
            name='uuid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
        ),
        migrations.AddField(
            model_name='contact',
            name='village',
            field=models.ForeignKey(blank=True, limit_choices_to={'location_type': 'village'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts_by_village', to='core.location', verbose_name='Village'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='Email Address'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='first_name',
            field=models.CharField(blank=True, max_length=255, verbose_name='First Name'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='last_name',
            field=models.CharField(blank=True, max_length=255, verbose_name='Last Name'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['full_name'], name='contacts_co_full_na_307d55_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['primary_phone'], name='contacts_co_primary_dcc822_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['secondary_phone'], name='contacts_co_seconda_b44580_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['email'], name='contacts_co_email_25f973_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['national_id'], name='contacts_co_nationa_fcc16f_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['first_name', 'last_name'], name='contacts_co_first_n_57a3e4_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['full_name', 'primary_phone'], name='contacts_co_full_na_d3509a_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['district', 'subcounty'], name='contacts_co_distric_0e88a0_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['region', 'district'], name='contacts_co_region__ebb952_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['legacy_contact_id'], name='contacts_co_legacy__5ce134_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['legacy_client_id'], name='contacts_co_legacy__38615d_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['legacy_reporter_id'], name='contacts_co_legacy__f8109d_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['legacy_perpetrator_id'], name='contacts_co_legacy__4d240c_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['migration_source'], name='contacts_co_migrati_23535d_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['is_active', 'full_name'], name='contacts_co_is_acti_7dcb1c_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['contact_type', 'is_active'], name='contacts_co_contact_8c0a97_idx'),
        ),
        migrations.AddConstraint(
            model_name='contact',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('primary_phone__gt', ''), ('primary_phone__isnull', False)), models.Q(('email__gt', ''), ('email__isnull', False)), models.Q(('physical_address__gt', ''), ('physical_address__isnull', False)), _connector='OR'), name='contact_has_contact_method'),
        ),
        migrations.AddField(
            model_name='contactaddress',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='contacts.contact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='contactaddress',
            name='district',
            field=models.ForeignKey(blank=True, limit_choices_to={'location_type': 'district'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='addresses_by_district', to='core.location', verbose_name='District'),
        ),
        migrations.AddField(
            model_name='contactaddress',
            name='subcounty',
            field=models.ForeignKey(blank=True, limit_choices_to={'location_type': 'subcounty'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='addresses_by_subcounty', to='core.location', verbose_name='Subcounty'),
        ),
        migrations.AddField(
            model_name='contactmergelog',
            name='merged_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Merged By'),
        ),
        migrations.AddField(
            model_name='contactmergelog',
            name='primary_contact',
            field=models.ForeignKey(help_text='Contact that was kept after merge', on_delete=django.db.models.deletion.CASCADE, related_name='merge_logs_as_primary', to='contacts.contact', verbose_name='Primary Contact'),
        ),
        migrations.AddField(
            model_name='contactphone',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_numbers', to='contacts.contact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='contactrelationship',
            name='contact_from',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationships_from', to='contacts.contact', verbose_name='Contact From'),
        ),
        migrations.AddField(
            model_name='contactrelationship',
            name='contact_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relationships_to', to='contacts.contact', verbose_name='Contact To'),
        ),
        migrations.AddField(
            model_name='contactrole',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='contacts.contact', verbose_name='Contact'),
        ),
        migrations.AddField(
            model_name='contactrole',
            name='relationship',
            field=models.ForeignKey(blank=True, help_text='Relationship to the victim/client', limit_choices_to={'category': 'relationship'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.referencedata', verbose_name='Relationship'),
        ),
        migrations.AddIndex(
            model_name='contactaddress',
            index=models.Index(fields=['contact', 'address_type'], name='contacts_co_contact_4f7302_idx'),
        ),
        migrations.AddIndex(
            model_name='contactaddress',
            index=models.Index(fields=['contact', 'is_primary'], name='contacts_co_contact_777c4b_idx'),
        ),
        migrations.AddIndex(
            model_name='contactmergelog',
            index=models.Index(fields=['primary_contact', '-created_at'], name='contacts_co_primary_a7b30b_idx'),
        ),
        migrations.AddIndex(
            model_name='contactmergelog',
            index=models.Index(fields=['merged_contact_id'], name='contacts_co_merged__353cda_idx'),
        ),
        migrations.AddIndex(
            model_name='contactmergelog',
            index=models.Index(fields=['merged_by', '-created_at'], name='contacts_co_merged__1fa96e_idx'),
        ),
        migrations.AddIndex(
            model_name='contactphone',
            index=models.Index(fields=['phone_number'], name='contacts_co_phone_n_92ea83_idx'),
        ),
        migrations.AddIndex(
            model_name='contactphone',
            index=models.Index(fields=['contact', 'is_primary'], name='contacts_co_contact_dcc82d_idx'),
        ),
        migrations.AddIndex(
            model_name='contactphone',
            index=models.Index(fields=['contact', 'phone_type'], name='contacts_co_contact_b7d6a5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contactphone',
            unique_together={('contact', 'phone_number')},
        ),
        migrations.AddIndex(
            model_name='contactrelationship',
            index=models.Index(fields=['contact_from', 'relationship_type'], name='contacts_co_contact_be9661_idx'),
        ),
        migrations.AddIndex(
            model_name='contactrelationship',
            index=models.Index(fields=['contact_to', 'relationship_type'], name='contacts_co_contact_9bf62a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contactrelationship',
            unique_together={('contact_from', 'contact_to', 'relationship_type')},
        ),
        migrations.AddIndex(
            model_name='contactrole',
            index=models.Index(fields=['contact', 'role'], name='contacts_co_contact_5e857c_idx'),
        ),
        migrations.AddIndex(
            model_name='contactrole',
            index=models.Index(fields=['role', 'is_primary'], name='contacts_co_role_526b60_idx'),
        ),
        migrations.AddIndex(
            model_name='contactrole',
            index=models.Index(fields=['legacy_role_id'], name='contacts_co_legacy__86b1b2_idx'),
        ),
    ]
