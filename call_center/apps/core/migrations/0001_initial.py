# Generated by Django 5.2.1 on 2025-06-04 22:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('code', models.CharField(max_length=2, unique=True, verbose_name='ISO Code')),
                ('code3', models.CharField(max_length=3, unique=True, verbose_name='ISO3 Code')),
                ('phone_code', models.CharField(max_length=10, verbose_name='Phone Code')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('code', models.CharField(max_length=5, unique=True, verbose_name='Code')),
                ('native_name', models.CharField(blank=True, max_length=100, verbose_name='Native Name')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Languages',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('restore', 'Restore'), ('login', 'Login'), ('logout', 'Logout'), ('access', 'Access'), ('export', 'Export'), ('import', 'Import')], max_length=20, verbose_name='Action')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('object_repr', models.CharField(blank=True, max_length=255, verbose_name='Object Representation')),
                ('changes', models.JSONField(blank=True, default=dict, help_text='JSON representation of what changed', verbose_name='Changes')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('additional_info', models.JSONField(blank=True, default=dict, verbose_name='Additional Info')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Content Type')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='core_auditl_user_id_969660_idx'), models.Index(fields=['content_type', 'object_id'], name='core_auditl_content_fec0c4_idx'), models.Index(fields=['action', '-created_at'], name='core_auditl_action_d80c2d_idx'), models.Index(fields=['-created_at'], name='core_auditl_created_1a76fa_idx')],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('location_type', models.CharField(choices=[('country', 'Country'), ('region', 'Region'), ('district', 'District'), ('county', 'County'), ('subcounty', 'Subcounty'), ('parish', 'Parish'), ('village', 'Village'), ('city', 'City'), ('town', 'Town')], max_length=20, verbose_name='Type')),
                ('code', models.CharField(blank=True, max_length=20, verbose_name='Code')),
                ('level', models.IntegerField(default=0, verbose_name='Level')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.location', verbose_name='Parent Location')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ['level', 'name'],
                'indexes': [models.Index(fields=['location_type', 'is_active'], name='core_locati_locatio_b2216c_idx'), models.Index(fields=['parent', 'is_active'], name='core_locati_parent__646725_idx'), models.Index(fields=['level', 'name'], name='core_locati_level_859252_idx')],
            },
        ),
        migrations.CreateModel(
            name='ReferenceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('category', models.CharField(help_text='Category this reference data belongs to', max_length=50, verbose_name='Category')),
                ('code', models.CharField(blank=True, help_text='Unique code for this reference item', max_length=50, null=True, verbose_name='Code')),
                ('name', models.CharField(help_text='Display name for this reference item', max_length=255, verbose_name='Name')),
                ('level', models.IntegerField(default=0, help_text='Hierarchy level (0 = root)', verbose_name='Level')),
                ('sort_order', models.IntegerField(default=0, help_text='Order for displaying items', verbose_name='Sort Order')),
                ('description', models.TextField(blank=True, help_text='Additional description or notes', null=True, verbose_name='Description')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional data stored as JSON', verbose_name='Metadata')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('parent', models.ForeignKey(blank=True, help_text='Parent reference data for hierarchical structure', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.referencedata', verbose_name='Parent')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Reference Data',
                'verbose_name_plural': 'Reference Data',
                'ordering': ['category', 'level', 'sort_order', 'name'],
                'indexes': [models.Index(fields=['category', 'is_active'], name='core_refere_categor_c1cd7e_idx'), models.Index(fields=['category', 'parent'], name='core_refere_categor_2ef708_idx'), models.Index(fields=['category', 'code'], name='core_refere_categor_488f9b_idx'), models.Index(fields=['level', 'sort_order'], name='core_refere_level_3e29af_idx')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('code__isnull', False), ('is_active', True)), fields=('category', 'code'), name='unique_active_category_code')],
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted at')),
                ('key', models.CharField(help_text='Unique identifier for this setting', max_length=100, unique=True, verbose_name='Key')),
                ('value', models.TextField(help_text='The setting value', verbose_name='Value')),
                ('setting_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON'), ('text', 'Text')], default='string', max_length=20, verbose_name='Type')),
                ('category', models.CharField(default='general', max_length=50, verbose_name='Category')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_sensitive', models.BooleanField(default=False, help_text='Whether this setting contains sensitive information', verbose_name='Is Sensitive')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Setting',
                'verbose_name_plural': 'Settings',
                'ordering': ['category', 'key'],
                'indexes': [models.Index(fields=['category', 'is_active'], name='core_settin_categor_bf2d8a_idx'), models.Index(fields=['key'], name='core_settin_key_53fa74_idx')],
            },
        ),
    ]
