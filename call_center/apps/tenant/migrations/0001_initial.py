# Generated by Django 5.2.1 on 2025-06-04 22:02

import django.db.models.deletion
import django_tenants.postgresql_backend.base
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schema_name', models.CharField(db_index=True, max_length=63, unique=True, validators=[django_tenants.postgresql_backend.base._check_schema_name])),
                ('name', models.CharField(help_text='Name of the organization', max_length=100, verbose_name='Organization Name')),
                ('description', models.TextField(blank=True, help_text='Brief description of the organization', verbose_name='Description')),
                ('contact_email', models.EmailField(blank=True, help_text='Primary contact email for the organization', max_length=254, verbose_name='Contact Email')),
                ('contact_phone', models.CharField(blank=True, help_text='Primary contact phone number', max_length=20, verbose_name='Contact Phone')),
                ('contact_person', models.CharField(blank=True, help_text='Primary contact person name', max_length=100, verbose_name='Contact Person')),
                ('address_line1', models.CharField(blank=True, max_length=255, verbose_name='Address Line 1')),
                ('address_line2', models.CharField(blank=True, max_length=255, verbose_name='Address Line 2')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, verbose_name='State/Province')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Country')),
                ('timezone', models.CharField(default='UTC', help_text='Default timezone for the organization', max_length=50, verbose_name='Timezone')),
                ('language', models.CharField(default='en', help_text='Default language for the organization', max_length=10, verbose_name='Language')),
                ('currency', models.CharField(default='USD', help_text='Default currency (ISO 4217 code)', max_length=3, verbose_name='Currency')),
                ('subscription_plan', models.CharField(choices=[('basic', 'Basic'), ('professional', 'Professional'), ('enterprise', 'Enterprise'), ('custom', 'Custom')], default='basic', max_length=50, verbose_name='Subscription Plan')),
                ('max_users', models.PositiveIntegerField(default=10, help_text='Maximum number of users allowed', verbose_name='Maximum Users')),
                ('max_contacts', models.PositiveIntegerField(default=1000, help_text='Maximum number of contacts allowed', verbose_name='Maximum Contacts')),
                ('max_campaigns', models.PositiveIntegerField(default=5, help_text='Maximum number of active campaigns', verbose_name='Maximum Campaigns')),
                ('storage_limit_gb', models.PositiveIntegerField(default=1, help_text='Storage limit in gigabytes', verbose_name='Storage Limit (GB)')),
                ('billing_email', models.EmailField(blank=True, max_length=254, verbose_name='Billing Email')),
                ('billing_contact', models.CharField(blank=True, max_length=100, verbose_name='Billing Contact')),
                ('features', models.JSONField(blank=True, default=dict, help_text='JSON object containing enabled features', verbose_name='Enabled Features')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the tenant is currently active', verbose_name='Is Active')),
                ('is_trial', models.BooleanField(default=False, help_text='Whether this is a trial account', verbose_name='Is Trial')),
                ('trial_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Trial End Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Tenant',
                'verbose_name_plural': 'Tenants',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['schema_name'], name='tenant_tena_schema__01b1f2_idx'), models.Index(fields=['is_active', 'created_at'], name='tenant_tena_is_acti_acb6c1_idx'), models.Index(fields=['subscription_plan'], name='tenant_tena_subscri_5af2d3_idx')],
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(db_index=True, max_length=253, unique=True)),
                ('is_primary', models.BooleanField(db_index=True, default=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='tenant.tenant')),
            ],
            options={
                'verbose_name': 'Domain',
                'verbose_name_plural': 'Domains',
            },
        ),
        migrations.CreateModel(
            name='TenantSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, verbose_name='Setting Key')),
                ('value', models.TextField(verbose_name='Setting Value')),
                ('value_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON')], default='string', max_length=20, verbose_name='Value Type')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='tenant.tenant', verbose_name='Tenant')),
            ],
            options={
                'verbose_name': 'Tenant Setting',
                'verbose_name_plural': 'Tenant Settings',
                'indexes': [models.Index(fields=['tenant', 'key'], name='tenant_tena_tenant__e878f8_idx')],
                'unique_together': {('tenant', 'key')},
            },
        ),
    ]
