# Generated by Django 5.2.1 on 2025-06-08 19:50

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReferenceData',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('code', models.CharField(help_text='Unique code identifier within this data type and tenant', max_length=50)),
                ('display_value', models.CharField(help_text='Human-readable display value', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Detailed description of this entry')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this entry is active and available for use')),
                ('sort_order', models.IntegerField(default=0, help_text='Sort order for display purposes')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional attributes specific to this entry')),
                ('version', models.PositiveIntegerField(default=1, help_text='Version number for optimistic concurrency control')),
                ('created_by', models.ForeignKey(help_text='User who created this record', on_delete=django.db.models.deletion.PROTECT, related_name='created_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User who soft deleted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, help_text='Parent entry for hierarchical data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='reference_data.referencedata')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reference_data', to='tenants.tenant')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reference Data',
                'verbose_name_plural': 'Reference Data',
                'ordering': ['data_type', 'sort_order', 'display_value'],
            },
        ),
        migrations.CreateModel(
            name='ReferenceDataHistory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('version', models.PositiveIntegerField()),
                ('change_reason', models.CharField(blank=True, help_text='Reason for the change', max_length=255)),
                ('changed_fields', models.JSONField()),
                ('previous_state', models.JSONField()),
                ('created_by', models.ForeignKey(help_text='User who created this record', on_delete=django.db.models.deletion.PROTECT, related_name='created_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User who soft deleted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('reference_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='reference_data.referencedata')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reference Data History',
                'verbose_name_plural': 'Reference Data Histories',
                'ordering': ['-created_at'],
                'get_latest_by': 'created_at',
            },
        ),
        migrations.CreateModel(
            name='ReferenceDataType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('name', models.CharField(help_text="Unique name identifier for this reference data type (e.g., 'product_categories')", max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of what this reference data type represents')),
                ('is_tenant_specific', models.BooleanField(default=True, help_text='Whether this data type can have tenant-specific values')),
                ('is_system_managed', models.BooleanField(default=False, help_text='If True, this type is managed by the system and cannot be modified via API')),
                ('allowed_metadata_keys', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, help_text='List of allowed keys in the metadata JSON field', null=True, size=None)),
                ('validation_schema', models.JSONField(blank=True, help_text='JSON schema for validating the metadata field', null=True)),
                ('created_by', models.ForeignKey(help_text='User who created this record', on_delete=django.db.models.deletion.PROTECT, related_name='created_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User who soft deleted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reference Data Type',
                'verbose_name_plural': 'Reference Data Types',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='referencedata',
            name='data_type',
            field=models.ForeignKey(help_text='Type of reference data this entry belongs to', on_delete=django.db.models.deletion.PROTECT, related_name='entries', to='reference_data.referencedatatype'),
        ),
        migrations.AddIndex(
            model_name='referencedata',
            index=models.Index(fields=['tenant', 'data_type', 'is_active'], name='reference_d_tenant__789ff0_idx'),
        ),
        migrations.AddIndex(
            model_name='referencedata',
            index=models.Index(fields=['tenant', 'data_type', 'code'], name='reference_d_tenant__e20d7e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='referencedata',
            unique_together={('tenant', 'data_type', 'code')},
        ),
    ]
