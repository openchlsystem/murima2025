# Generated by Django 5.2.2 on 2025-06-08 14:38

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('VIEW', 'View'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('EXPORT', 'Export'), ('IMPORT', 'Import'), ('ASSIGN', 'Assign'), ('TRANSFER', 'Transfer'), ('APPROVE', 'Approve'), ('REJECT', 'Reject'), ('ARCHIVE', 'Archive'), ('RESTORE', 'Restore')], help_text='Type of action performed', max_length=20)),
                ('object_id', models.CharField(help_text='ID of the object that was affected', max_length=255)),
                ('object_repr', models.CharField(help_text='String representation of the affected object', max_length=255)),
                ('changes', models.JSONField(blank=True, default=dict, help_text='JSON object containing the changes made')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address where the action originated', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string from the request')),
                ('description', models.TextField(blank=True, help_text='Human-readable description of the action')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata about the action')),
                ('object_type', models.ForeignKey(help_text='Type of object that was affected', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('tenant', models.ForeignKey(help_text='Tenant where this action occurred', on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
                ('user', models.ForeignKey(blank=True, help_text='User who performed the action (null for system actions)', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Log Entry',
                'verbose_name_plural': 'Audit Log Entries',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['tenant', '-created_at'], name='core_auditl_tenant__93f9ab_idx'), models.Index(fields=['user', '-created_at'], name='core_auditl_user_id_969660_idx'), models.Index(fields=['object_type', 'object_id'], name='core_auditl_object__e2cf5e_idx'), models.Index(fields=['action', '-created_at'], name='core_auditl_action_d80c2d_idx')],
            },
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], default='ERROR', help_text='Severity level of the error', max_length=20)),
                ('message', models.TextField(help_text='Error message or description')),
                ('exception_type', models.CharField(blank=True, help_text='Type of exception that occurred', max_length=100)),
                ('stack_trace', models.TextField(blank=True, help_text='Full stack trace of the error')),
                ('request_path', models.CharField(blank=True, help_text='URL path where the error occurred', max_length=500)),
                ('request_method', models.CharField(blank=True, help_text='HTTP method of the request', max_length=10)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the request', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string from the request')),
                ('context', models.JSONField(blank=True, default=dict, help_text='Additional context data about the error')),
                ('is_resolved', models.BooleanField(default=False, help_text='Whether this error has been resolved')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When this error was marked as resolved', null=True)),
                ('resolution_notes', models.TextField(blank=True, help_text='Notes about how the error was resolved')),
                ('resolved_by', models.ForeignKey(blank=True, help_text='User who marked this error as resolved', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='errors_resolved', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(blank=True, help_text='Tenant where the error occurred', null=True, on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
                ('user', models.ForeignKey(blank=True, help_text='User who encountered the error', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Error Log',
                'verbose_name_plural': 'Error Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['level', '-created_at'], name='core_errorl_level_fe3ed5_idx'), models.Index(fields=['tenant', '-created_at'], name='core_errorl_tenant__dc56ed_idx'), models.Index(fields=['user', '-created_at'], name='core_errorl_user_id_f0a611_idx'), models.Index(fields=['is_resolved', '-created_at'], name='core_errorl_is_reso_8d538a_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('key', models.CharField(help_text='Unique key identifying this configuration setting', max_length=100, unique=True)),
                ('name', models.CharField(help_text='Human-readable name for this setting', max_length=200)),
                ('value', models.JSONField(help_text='The configuration value (can be any JSON-serializable type)')),
                ('data_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON Object'), ('list', 'List')], default='string', help_text='Type of data stored in the value field', max_length=20)),
                ('validation_rules', models.JSONField(blank=True, default=dict, help_text='Validation rules for this configuration value')),
                ('description', models.TextField(blank=True, help_text='Detailed description of what this setting controls')),
                ('category', models.CharField(blank=True, help_text='Category to group related settings', max_length=50)),
                ('is_sensitive', models.BooleanField(default=False, help_text='Whether this setting contains sensitive information')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this setting is currently active')),
                ('created_by', models.ForeignKey(help_text='User who created this record', on_delete=django.db.models.deletion.PROTECT, related_name='created_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User who soft deleted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Configuration',
                'verbose_name_plural': 'System Configurations',
                'ordering': ['category', 'name'],
                'indexes': [models.Index(fields=['key'], name='core_system_key_bbe506_idx'), models.Index(fields=['category', 'name'], name='core_system_categor_fcd4b5_idx')],
            },
        ),
    ]
