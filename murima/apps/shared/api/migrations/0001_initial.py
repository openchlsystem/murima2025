# Generated by Django 5.2.2 on 2025-06-08 14:38

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for this record', primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('name', models.CharField(help_text='Human-readable name for this API key', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Optional description of API key purpose')),
                ('key_hash', models.CharField(help_text='SHA256 hash of the actual API key', max_length=64, unique=True)),
                ('key_prefix', models.CharField(editable=False, help_text='First few characters of key for identification', max_length=10)),
                ('permissions', models.JSONField(default=dict, help_text='JSON object defining what this API key can access')),
                ('rate_limit', models.IntegerField(default=1000, help_text='Maximum requests per hour')),
                ('current_usage', models.IntegerField(default=0, help_text="Current hour's request count")),
                ('usage_reset_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When the current usage counter resets')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this API key is currently active')),
                ('expires_at', models.DateTimeField(blank=True, help_text='Optional expiration date for the API key', null=True)),
                ('last_used_at', models.DateTimeField(blank=True, help_text='Last time this API key was used', null=True)),
                ('last_used_ip', models.GenericIPAddressField(blank=True, help_text='IP address of last usage', null=True)),
                ('allowed_origins', models.JSONField(blank=True, default=list, help_text='List of allowed origin domains/IPs. Empty list means no restrictions.')),
                ('created_by', models.ForeignKey(help_text='User who created this record', on_delete=django.db.models.deletion.PROTECT, related_name='created_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User who soft deleted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(blank=True, help_text='If set, key is scoped to this tenant only. If null, platform-wide key.', null=True, on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='updated_records_%(app_label)s_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'API Key',
                'verbose_name_plural': 'API Keys',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='APIKeyUsageStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('date', models.DateField(help_text='Date for this usage summary')),
                ('hour', models.IntegerField(blank=True, help_text='Hour of day (0-23) for hourly stats, null for daily stats', null=True)),
                ('total_requests', models.IntegerField(default=0, help_text='Total number of requests')),
                ('successful_requests', models.IntegerField(default=0, help_text='Number of successful requests (2xx)')),
                ('failed_requests', models.IntegerField(default=0, help_text='Number of failed requests (4xx, 5xx)')),
                ('total_bytes_transferred', models.BigIntegerField(default=0, help_text='Total bytes in requests and responses')),
                ('avg_response_time', models.DurationField(blank=True, help_text='Average response time', null=True)),
                ('max_response_time', models.DurationField(blank=True, help_text='Maximum response time', null=True)),
                ('api_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_stats', to='api.apikey')),
            ],
            options={
                'verbose_name': 'API Key Usage Stats',
                'verbose_name_plural': 'API Key Usage Stats',
                'ordering': ['-date', '-hour'],
            },
        ),
        migrations.CreateModel(
            name='APIRequestLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was first created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('endpoint', models.CharField(help_text='API endpoint path', max_length=255)),
                ('method', models.CharField(help_text='HTTP method (GET, POST, etc.)', max_length=10)),
                ('query_params', models.JSONField(blank=True, default=dict, help_text='Query parameters as JSON')),
                ('request_size', models.IntegerField(default=0, help_text='Size of request body in bytes')),
                ('ip_address', models.GenericIPAddressField(help_text='Client IP address')),
                ('user_agent', models.TextField(blank=True, help_text='Client user agent string')),
                ('status_code', models.IntegerField(blank=True, help_text='HTTP response status code', null=True)),
                ('response_time', models.DurationField(blank=True, help_text='Time taken to process the request', null=True)),
                ('response_size', models.IntegerField(default=0, help_text='Size of response body in bytes')),
                ('response_data', models.JSONField(blank=True, default=dict, help_text='Response metadata (not full response body)')),
                ('error_message', models.TextField(blank=True, help_text='Error message if request failed')),
                ('exception_type', models.CharField(blank=True, help_text='Exception class name if error occurred', max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When the request was made')),
                ('api_key', models.ForeignKey(blank=True, help_text='API key used for this request (if any)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.apikey')),
                ('tenant', models.ForeignKey(blank=True, help_text='Tenant context for this request', null=True, on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
                ('user', models.ForeignKey(blank=True, help_text='User making the request (if authenticated)', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'API Request Log',
                'verbose_name_plural': 'API Request Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['key_hash'], name='api_apikey_key_has_ce081c_idx'),
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['tenant', '-created_at'], name='api_apikey_tenant__fab8d7_idx'),
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['is_active', 'expires_at'], name='api_apikey_is_acti_81c3ea_idx'),
        ),
        migrations.AddIndex(
            model_name='apikey',
            index=models.Index(fields=['usage_reset_at'], name='api_apikey_usage_r_77a2e6_idx'),
        ),
        migrations.AddIndex(
            model_name='apikeyusagestats',
            index=models.Index(fields=['api_key', '-date'], name='api_apikeyu_api_key_f28510_idx'),
        ),
        migrations.AddIndex(
            model_name='apikeyusagestats',
            index=models.Index(fields=['date', 'hour'], name='api_apikeyu_date_19f57e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='apikeyusagestats',
            unique_together={('api_key', 'date', 'hour')},
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['tenant', '-timestamp'], name='api_apirequ_tenant__9b91c5_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['api_key', '-timestamp'], name='api_apirequ_api_key_7d0ebc_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['endpoint', '-timestamp'], name='api_apirequ_endpoin_85d4a5_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['status_code', '-timestamp'], name='api_apirequ_status__dbb248_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['user', '-timestamp'], name='api_apirequ_user_id_16f43f_idx'),
        ),
        migrations.AddIndex(
            model_name='apirequestlog',
            index=models.Index(fields=['-timestamp'], name='api_apirequ_timesta_df54ac_idx'),
        ),
    ]
