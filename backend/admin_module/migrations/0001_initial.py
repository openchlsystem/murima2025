# Generated by Django 5.2.2 on 2025-06-07 18:25

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tenant_specific', models.BooleanField(default=False)),
                ('system_managed', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintenance_mode', models.BooleanField(default=False, help_text='Only admins can access when enabled')),
                ('allow_new_signups', models.BooleanField(default=True, help_text='Allow new user registrations')),
                ('default_ai_provider', models.CharField(choices=[('OPENAI', 'OpenAI'), ('HUGGINGFACE', 'Hugging Face'), ('ANTHROPIC', 'Anthropic'), ('LOCAL', 'Local Model')], default='OPENAI', max_length=50)),
                ('ai_provider_settings', models.JSONField(blank=True, default=dict, help_text='Provider-specific config')),
                ('case_number_prefix', models.CharField(default='CASE', max_length=10)),
                ('case_number_counter', models.PositiveIntegerField(default=1)),
                ('default_case_priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=20)),
            ],
            options={
                'verbose_name': 'System Configuration',
            },
        ),
        migrations.CreateModel(
            name='SystemNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('severity', models.CharField(choices=[('INFO', 'Information'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], default='INFO', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('affected_tenants', models.ManyToManyField(blank=True, to='tenants.tenant')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='TenantConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('custom_domain', models.CharField(blank=True, max_length=255)),
                ('enabled_modules', models.JSONField(default=list)),
                ('custom_categories', models.JSONField(blank=True, default=dict)),
                ('case_workflow', models.JSONField(default=list)),
                ('default_assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuration', to='tenants.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('ACCESS', 'Access')], max_length=10)),
                ('model_name', models.CharField(db_index=True, max_length=50)),
                ('object_id', models.CharField(blank=True, db_index=True, max_length=36, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['model_name', 'object_id'], name='admin_modul_model_n_ef2aa9_idx'), models.Index(fields=['action', 'timestamp'], name='admin_modul_action_155f2a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='admin_module.category')),
                ('category_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='admin_module.categorytype')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['category_type', 'sort_order', 'name'],
                'constraints': [models.CheckConstraint(condition=models.Q(('parent', models.F('id')), _negated=True), name='no_self_parent')],
                'unique_together': {('category_type', 'name')},
            },
        ),
    ]
